{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,GADOC,SAASC,cAAc,SACrBD,SAASC,cAAc,0BAClCC,EAAW,GACfH,EAAOI,iBAAiB,SAAS,SAACC,GAChCA,EAAEC,iBACFH,EAAW,CACTI,MAAOC,SAASP,SAASC,cAAc,uBAAuBO,OAC9DC,KAAMF,SAASP,SAASC,cAAc,sBAAsBO,OAC5DE,OAAQH,SAASP,SAASC,cAAc,wBAAwBO,QAElEG,QAAQC,IAAIV,GAkBd,WACE,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAASQ,OAAQG,IACnCF,QAAQC,IAAIV,EAASI,OACrBQ,EAAcD,EAAGX,EAASI,OACvBS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUX,EAAKU,EAALV,MACjBY,EAAArB,GAASsB,OAAOC,QAAQ,qBAAoCC,OAAfJ,EAAS,QAAYI,OAANf,EAAM,O,IAEnEgB,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUX,EAAKU,EAALV,MAClBY,EAAArB,GAASsB,OAAOI,QAAQ,oBAAmCF,OAAfJ,EAAS,QAAYI,OAANf,EAAM,O,IAErEJ,EAASI,OAASJ,EAASO,I,CA3B7Be,E,IAGFb,QAAQC,IAAIV,GACZ,IAAMY,EAAgB,SAACG,EAAUX,GAC/B,OAAO,IAAImB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAET,WAAUX,UAEpBqB,EAAO,CAAEV,WAAUX,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst form = document.querySelector(\".form\");\nconst submit = document.querySelector('button[type=\"submit\"]');\nlet infoForm = {};\nsubmit.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  infoForm = {\n    delay: parseInt(document.querySelector('input[name=\"delay\"]').value),\n    step: parseInt(document.querySelector('input[name=\"step\"]').value),\n    amount: parseInt(document.querySelector('input[name=\"amount\"]').value),\n  };\n  console.log(infoForm);\n  Results();\n});\n\nconsole.log(infoForm);\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction Results() {\n  for (let i = 0; i < infoForm.amount; i++) {\n    console.log(infoForm.delay);\n    createPromise(i, infoForm.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay} ms`);\n      });\n    infoForm.delay += infoForm.step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$submit","document","querySelector","$ce04d3a99e08e73b$var$infoForm","addEventListener","e","preventDefault","delay","parseInt","value","step","amount","console","log","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$Results","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.0a08534e.js.map"}